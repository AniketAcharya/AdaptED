import React, { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import axios from "axios";
import { CohereClient } from "cohere-ai";
import { initTopic, initTrans } from "../assets/context";
import { useQuizData } from "../Store/QuizData";
import Shimmer from "./Shimmer";

function VideoPage() {
  const cohere = new CohereClient({
    token: "dqpQ3o9lbthUf4YGCkL89mJhrPxKW0C45MTU6tY5",
  });
  const location = useLocation();
  const videoId = location.state?.videoId;
  const navigate = useNavigate();
  const { setCurrent } = useQuizData();

  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    setCurrent("video");
  }, []);

  if (!videoId) {
    return <div>No video ID provided.</div>;
  }

  const embedUrl = `https://www.youtube.com/embed/${videoId}`;

  async function next() {
    setIsLoading(true);
    try {
      const response = await axios.post(
        "http://localhost:5000/get_transcript",
        { videoId: videoId }
      );
      const transcript = response.data.transcript;
      (async () => {
        const topicName = "HTML tags";
        const chatStream = await cohere.chatStream({
          chatHistory: [
            {
              role: "USER",
              message: `You are a skilled AI question generator specialized in creating multiple-choice questions based on video transcripts. Your goal is to produce exactly 10 MCQs, not more than 10 and not less than 10 either, from this set of information : ${initTrans} on the topic of ${initTopic}.
            The questions and answers should be from the provided information only and do not hallucinate or use any additional information apart from the one provided.
            And provide the questions and answers strictly in array of objects format just like the given below example:
            [
              {
                "question": "question generated by you",
                "option1": "first option",
                "option2": "second option",
                "option3": "third option",
                "option4": "forth option",
                "ans": 3(no comma here)
              },
              {
                "question": "next question generated by you",
                "option1": "first option",
                "option2": "second option",
                "option3": "third option",
                "option4": "forth option",
                "ans": 4(no comma here)
              },
              .
              .
              .
              and when the last question comes, do not add comma "," in the end just like this:
              {
                "question": "last question generated by you",
                "option1": "first option",
                "option2": "second option",
                "option3": "third option",
                "option4": "forth option",
                "ans": 4(no comma here)
              }(no comma here)
            ]
            you are strictly advised to follow the above format and give the questions and answers only in the form of array of objects`,
            },
            {
              role: "CHATBOT",
              message: `Here are the 10 MCQs in the format specified by you:
              [
                  {
                    question:
                      "What is the main purpose of a class in object-oriented programming?",
                    option1: "To provide a generic form for reservations.",
                    option2:
                      "To facilitate the learning of programming through the use of gaming models.",
                    option3:
                      "To guide the creation of objects by providing templates and implementing behavior methods.",
                    option4:
                      "To establish rules and protocols for object creation and behavior.",
                    ans: 3
                  },
                  {
                    question: "What is the relationship between a class and an object?",
                    option1: "A class is a template that forms the basis of every object.",
                    option2:
                      "An object is an entity that emerges from the class, possessing its own unique properties.",
                    option3:
                      "A class and an object are synonymous, each serving to represent the other.",
                    option4:
                      "A class and an object are interconnected, with the class containing the object.",
                    ans: 4
                  },
                  {
                    question: "What is the role of methods in classes?",
                    option1:
                      "Methods serve as catalysts, triggering the emergence of objects from classes.",
                    option2:
                      "Methods act as intermediaries, enabling communication between the class and the object.",
                    option3:
                      "Methods are employed to instill behavior in objects, guiding their actions and providing functionality.",
                    option4:
                      "Methods are responsible for establishing relationships between objects, facilitating their interactions.",
                    ans: 3
                  },
                  {
                    question: "What is the role of properties in classes?",
                    option1:
                      "Properties equip objects with distinctive attributes, differentiating one object from another.",
                    option2:
                      "Properties offer a means of object identification, enabling the association of unique labels with each object.",
                    option3:
                      "Properties function as repositories for data that is associated with an object.",
                    option4:
                      "Properties establish territories that objects are entitled to claim as their own.",
                    ans: 3
                  },
                  {
                    question: "How many forms did Rohan fill out in total?",
                    option1:
                      "Rohan filled out two forms: one for train number 145316 and another for train number 420.",
                    option2:
                      "Rohan filled out two forms: one for train number 145316 and another for train number 911.",
                    option3:
                      "Rohan filled out three forms: one for train number 145316, another for train number 420, and the third for train number 911.",
                    option4:
                      "Rohan filled out four forms: two for train number 145316, one for train number 420, and the fourth for train number 911.",
                    ans: 1
                  },
                  {
                    question: "Which method did Harry use to cancel his form?",
                    option1: 'Harry canceled his form using the "cancel" method.',
                    option2: 'Harry canceled his form using the "submission" method.',
                    option3: 'Harry canceled his form using the "form" method.',
                    option4: 'Harry canceled his form using the "cancelform" method.',
                    ans: 3
                  },
                  {
                    question:
                      "What is the purpose of the submit method in the context of the train reservation form?",
                    option1:
                      "The submit method is utilized to notify the user that their form has been successfully submitted.",
                    option2:
                      "The submit method is employed to process and verify the information provided in the form.",
                    option3:
                      "The submit method is responsible for sending the form for further processing and reservation.",
                    option4:
                      "The submit method is a user-friendly tool that assists in filling out the form.",
                    ans: 3
                  },
                  {
                    question: "Which method can be used to assign a train number to a form?",
                    option1: "The submit method assigns a train number to a form.",
                    option2: "The fill method assigns a train number to a form.",
                    option3: "The cancel method assigns a train number to a form.",
                    option4: "The cancelform method assigns a train number to a form.",
                    ans: 3
                  },
                  {
                    question: "What method can be used to cancel a form?",
                    option1: "The cancel method cancels the form.",
                    option2: "The cancelform method cancels the form.",
                    option3: "The submit method cancels the form.",
                    option4: "The fill method cancels the form.",
                    ans: 3
                  },
                  {
                    question:
                      "What is the purpose of the cancel method in the context of the train reservation form?",
                    option1:
                      "The cancel method cancels the entire reservation, enabling the user to make a fresh booking.",
                    option2:
                      "The cancel method is utilized to notify the user that their reservation has been successfully canceled.",
                    option3:
                      "The cancel method is responsible for freeing up the reservation slot for other potential bookings.",
                    option4:
                      "The cancel method allows users to modify their existing reservations.",
                    ans: 3
                  }
              ]`,
            },
          ],
          message: `You are a skilled AI question generator specialized in creating multiple-choice questions based on video transcripts. Your goal is to produce exactly 10 MCQs, not more than 10 and not less than 10 either, from this set of information : ${transcript} on the topic of ${topicName}.
          The questions and answers should be from the provided information only and do not hallucinate or use any additional information apart from the one provided.
          And provide the questions and answers strictly in array of objects format just like the given below example:
          [
            {
              "question": "question generated by you",
              "option1": "first option",
              "option2": "second option",
              "option3": "third option",
              "option4": "forth option",
              "ans": 3(no comma here)
            },
            {
              "question": "next question generated by you",
              "option1": "first option",
              "option2": "second option",
              "option3": "third option",
              "option4": "forth option",
              "ans": 4(no comma here)
            },
            .
            .
            .
            and when the last question comes, do not add comma "," in the end just like this:
            {
              "question": "last question generated by you",
              "option1": "first option",
              "option2": "second option",
              "option3": "third option",
              "option4": "forth option",
              "ans": 4(no comma here)
            }(no comma here)
          ]
          you are strictly advised to follow the above format and give the questions and answers only in the form of array of objects`,
          // connectors: [{ id: "web-search" }],
        });

        let fullText = "";

        for await (const message of chatStream) {
          if (message.eventType === "text-generation") {
            fullText += message.text;
          }
        }

        // console.log(fullText);
        let startIndex = fullText.indexOf("[");
        let endIndex = fullText.indexOf("]") + 1;
        let res = fullText.slice(startIndex, endIndex);
        // console.log("this is after slicing");
        // console.log(res);
        const arrayOfObjects = JSON.parse(res);
        setIsLoading(false); // Set loading to false after fetching data
        navigate("/quiz", { state: { data: arrayOfObjects } });
        // console.log(typeof arrayOfObjects);
        // console.log("this is after array of objects");
        // console.log(arrayOfObjects);
      })();
    } catch (error) {
      console.error("Error fetching transcript:", error);
      setIsLoading(false); // Also set loading to false in case of error
    }
  }

  // return (
  //   <>
  //     <div className="card-video">
  //       <iframe
  //         src={embedUrl}
  //         allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
  //         allowFullScreen
  //         title="Embedded YouTube video"
  //       ></iframe>
  //     </div>
  //     <button className="embed-btn" onClick={next}>
  //       Next
  //     </button>

  //   </>
  // );

  // Inside the return statement of VideoPage component
  return (
    <>
      {isLoading ? (
        <Shimmer />
      ) : (
        <>
          <div className="card-video">
            <iframe
              src={embedUrl}
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
              title="Embedded YouTube video"
            ></iframe>
          </div>
          <button className="embed-btn" onClick={next}>
            Next
          </button>
        </>
      )}
    </>
  );
}

export default VideoPage;
